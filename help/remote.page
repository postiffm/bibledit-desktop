<page xmlns="http://projectmallard.org/1.0/"
      type="topic"
      id="remote">
<info>
  <link type="guide" xref="preferences#projectnotes"/>
</info>

  <title>Preferences Menu</title>
<section id="remoterepo"><title>Remote Repository
      </title>
      <p>
        The Remote Repository Setup Assistant can be reached through menu <guiseq><gui>Preferences</gui><gui>Remote repository</gui></guiseq>.
      </p>
      <p>
        See <link xref="collaboration">Collaboration</link> for information about what this repository is used for.
      </p>
	<section id="useremote"><title>Use remote repository
      </title>
      <p>
        This setting allows several people to work together on one project.
      </p>
      <p>
        Several other settings have to be made, as described below.
      </p>
	</section>
	<section id="tryingout"><title>Trying out the content tracker
      </title>
      <p>
        The setup assistant will test the content tracker, whether it is able to perform everything that is needed. Normally the test passes, and you can go forward.
      </p>
	</section>
	<section id="actionselector"><title>Action selector
      </title>
      <p>
        In the next page select which action you'd like to take. For a first repository setup, the default action should be chosen.
      </p>
	</section>
	<section id="repository"><title>Repository
      </title>
      <p>
        This is the URL of the repository that Bibledit is going to use. Your system administrator should give you the URL that ought to be filled in here.
      </p>
      <p>
        Example URLs:
      </p>
      <code>
        git://biblerepository.com/projects/myproject
      </code>
      <code>
        git://localhost/repository
      </code>
      <code>
        file:///home/joe/repositories/myproject
      </code>
      <p>
        The path should point to an already existing repository, created by the system administrator.
      </p>
      <p>
        If the repository has been set, the dialog will indicate whether read access to the repository has been granted.
      </p>
	</section>
	<section id="clonerepo"><title>Clone repository
      </title>
      <p>
        Press the button to clone the remote repository.
      </p>
	</section>
	<section id="writeaccess"><title>Write access
      </title>
      <p>
        If write access has been granted, then things should work fine.
      </p>
	</section>
	<section id="pushrepo"><title>Push to repository
      </title>
      <p>
        Normally this step will be skipped. But if you really like your data to be pushed into the repository, or if the repository is still empty, then press the button to push your data to the repository. Use with care because it wipes out anything in the repository, and replaces it with your data.
      </p>
	</section>
	<section id="conflict"><title>Conflict handling
      </title>
      <p>
        When two users make changes in one line in one verse, and the changes are not compatible, then a conflict will occur. Bibledit will resolve this conflict for you. Settings for that are made in this dialog. You can give preference to "the local data". This means that the data of the other user is lost. Or you can give preference to "the data in the remote repository". This means that your own changes will be overwritten with the changes that are on the server, which actually means that the changes the other user made overwrite your own changes.
      </p>
      <p>
        When two users make changes in different verses of the same chapter, at the same time, Bibledit will merge those changes.
      </p>
	</section>
	<section id="applying"><title>Applying the changes
      </title>
      <p>
        Keep pressing the "Forward" button and at the end "Apply" the settings.
      </p>
	</section>
</section>
       
</page>
